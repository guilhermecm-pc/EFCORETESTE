// <auto-generated />
using System;
using EFCORETESTE.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCORETESTE.Migrations
{
    [DbContext(typeof(Hotel_Dbcontext))]
    [Migration("20241119143137_Novo2")]
    partial class Novo2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFCORETESTE.Models.Models.Host.Hospede", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Datanascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("hospedes");
                });

            modelBuilder.Entity("EFCORETESTE.Models.Models.Reserva.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Datacheckin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Datacheckout")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("hospedeId")
                        .HasColumnType("int");

                    b.Property<int>("quartoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("hospedeId");

                    b.HasIndex("quartoId");

                    b.ToTable("reservade");
                });

            modelBuilder.Entity("EFCORETESTE.Models.Models.room.Quarto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<bool>("Ocupacao")
                        .HasColumnType("bit");

                    b.Property<decimal>("Valorpordia")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("quartos");
                });

            modelBuilder.Entity("EFCORETESTE.Models.Models.Reserva.Reserva", b =>
                {
                    b.HasOne("EFCORETESTE.Models.Models.Host.Hospede", "hospede")
                        .WithMany()
                        .HasForeignKey("hospedeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCORETESTE.Models.Models.room.Quarto", "quarto")
                        .WithMany()
                        .HasForeignKey("quartoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hospede");

                    b.Navigation("quarto");
                });
#pragma warning restore 612, 618
        }
    }
}
